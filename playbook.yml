---
- name: Apply configurations based on OS type
  hosts: localhost
  tasks:
    - name: Detect OS type
      ansible.builtin.set_fact:
        is_macos: "{{ ansible_facts['os_family'] == 'Darwin' }}"
        is_linux: "{{ ansible_facts['os_family'] == 'Linux' }}"

    - name: Set XDG_CONFIG_HOME for macOS
      when: is_macos
      ansible.builtin.set_fact:
        xdg_config_home: "{{ lookup('env', 'HOME') }}/Library/Preferences/"

    - name: Set XDG_CONFIG_HOME for Linux
      when: is_linux
      ansible.builtin.set_fact:
        xdg_config_home: "{{ lookup('env', 'HOME') }}/.config/"

    - name: Apply VSCode configuration for macOS
      when: is_macos
      ansible.builtin.file:
        src: "{{ playbook_dir }}/code/settings.json"
        dest: "./settings.json"
        state: link

    - name: Apply VSCode configuration for Linux
      when: is_linux
      ansible.builtin.file:
        src: "{{ playbook_dir }}/code/settings.json"
        dest: "{{ xdg_config_home }}/code/settings.json"
        state: link

    - name: Apply Atuin configuration
      ansible.builtin.file:
        src: "{{ playbook_dir }}/atuin"
        dest: "{{ xdg_config_home }}/atuin"
        state: link

    - name: Apply Alacritty configuration
      ansible.builtin.file:
        src: "{{ playbook_dir }}/alacritty"
        dest: "{{ xdg_config_home }}/alacritty"
        state: link

    - name: Apply Zsh configuration
      ansible.builtin.file:
        src: "{{ playbook_dir }}/zsh"
        dest: "{{ xdg_config_home }}/zsh"
        state: link

    - name: Source Zsh configuration
      ansible.builtin.lineinfile:
        path: "{{ lookup('env', 'HOME') }}/.zshrc"
        line: "source {{ xdg_config_home }}/zsh/source.zsh"
        state: present
        create: true
        mode: '644'

    - name: Apply Docker configuration
      ansible.builtin.file:
        src: "{{ playbook_dir }}/docker"
        dest: "{{ xdg_config_home }}/docker"
        state: link

    - name: Apply Tmux configuration
      ansible.builtin.file:
        src: "{{ playbook_dir }}/tmux"
        dest: "{{ xdg_config_home }}/tmux"
        state: link

    - name: Apply Eza configuration
      ansible.builtin.file:
        src: "{{ playbook_dir }}/eza"
        dest: "{{ xdg_config_home }}/eza"
        state: link

    - name: Create Scripts directory for macOS
      when: is_macos
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/Library/Scripts"
        state: directory
        mode: '0644'

    - name: Set execution permission for XDG script on macOS
      when: is_macos
      ansible.builtin.file:
        path: "{{ playbook_dir }}/launchd/LaunchAgents/net.mkersten.xdg.sh"
        mode: '0755'

    - name: Apply XDG script for macOS
      when: is_macos
      ansible.builtin.file:
        src: "{{ playbook_dir }}/launchd/LaunchAgents/net.mkersten.xdg.sh"
        dest: "{{ lookup('env', 'HOME') }}/Library/Scripts/net.mkersten.xdg.sh"
        state: link

    - name: Create LaunchAgents directory for macOS
      when: is_macos
      ansible.builtin.file:
        path: "{{ lookup('env', 'HOME') }}/Library/LaunchAgents"
        state: directory
        mode: '0644'

    - name: Apply XDG plist for macOS
      when: is_macos
      ansible.builtin.file:
        src: "{{ playbook_dir }}/launchd/LaunchAgents/net.mkersten.xdg.plist"
        dest: "{{ lookup('env', 'HOME') }}/Library/LaunchAgents/net.mkersten.xdg.plist"
        state: link
